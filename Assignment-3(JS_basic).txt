                                                                          MODULE : 4 (JAVASCRIPT BASIC & DOM)

que:  1 ) What is javascript?
Ans:  -  Javascript is a scripting or programming language that allows you to impliment complex features on web pages. 
          every time a web page does more than
          just sit there and display static information for you to look at. displaying timely content updates, interactive maps ,animated 3d/2d graphics ,scrolling
          videos jukeboxes etc. 
       - You can bat that javascript is probably involved. It is the third layer of the cake of standard web technologies.
          Javascript is a language that enables you to creat dynamically updating content, control multimedia, animate images , and pretty much everything else.
       - Javascript was first known as Livescript but Netscape changed its name to javascript. Javascript made its first appearence in Netscape 2.0 in 1995 with 
          the name Livescript. The general-purpose core of the language has been embedded in Netscape ,Internet Explorer , and other web browsers.
       - Javascript is lightweight ,interpreted programming language.
       - It is designed for creating Network-centrinc appliications .
       - Complimentary to and integreted with Java.
       - Complimentary to and integreted with HTML.
       - It is open and cross-platform.

que: 2)  What is the use if NaN funcion?
 Ans:  Full form of NaN funcion is Not a Number.The isNaN() function is used to check whether a given value is an illegal number or not. It returns true if value is 
        a NaN else returns false. It is different from the Number.isNaN() Method.
        The method isNaN in JavaScript returns true if the given value is Not-a-Number, else it returns false.
        The isNaN() method converts the value to a number before testing it.

que: 3) What is nagetive infinity?
Ans:   The negative infinity in JavaScript is a constant value which is used to represent a value which is the lowest available. This means that no other number is 
        lesser than this value. It can be generated using a self-made function or by an arithmetic operation.
       - Negative infinity is different from mathematical infinity in the following ways:
     - Negative infinity results in 0 when divided by any other number.
     - When divided by itself or positive infinity, negative infinity return NaN
     - Negative infinity, when divided by any positive number (apart from positive infinity) is negative infinity.
     - Negative infinity, divided by any negative number (apart from negative infinity) is positive infinity.
     - If we multiply negative infinity with NaN, we will get NaN as a result.
     - The product of NaN and negative infinity is 0.
     - The product of two negative infinities is always a positive infinity.
     - The product of both positive and negative infinity is always negative infinity.

que: 4) Which compony developed Javascript?
Ans:  JavaScript was invented by Brendan Eich in 1995.
       It was developed for Netscape 2, and became the ECMA-262 standard in 1997.
       After Netscape handed JavaScript over to ECMA, the Mozilla foundation continued to develop JavaScript for the Firefox browser.
       Mozilla's latest version was 1.8.5. (Identical to ES5).
       Internet Explorer (IE4) was the first browser to support ECMA-262 Edition 1 (ES1).

que: 5) What are undeclared and undefined variables?
Ans: Undefined variable means a variable has been declared but does not have a value.
      Undeclared variable means that the variable does not exist in the program at all.

que: 6) Write the code for adding new element dynamically....
Ans: New elements can be created in JS by using the createElement() method. 
      let newElement = document.createElement("<createdElement>"); 
      This code will add the new element inside the programme.

que: 7) What is the defference between Viewstate and SessionState?
Ans: Session State contains information that is pertaining to a specific session (by a particular client/browser/machine) with the server. 
     It's a way to track what the user is doing on the site.. across multiple pages...amid the statelessness of the Web. e.g. the contents of a 
     particular user's shopping cart is session data. Cookies can be used for session state.
     View State on the other hand is information specific to particular web page. It is stored in a hidden field so that it isn't visible to the user.
     It is used to maintain the user's illusion that the page remembers what he did on it the last time - dont give him a clean page every time he posts back.

que: 8) What is === operator?
Ans: The strict equality operator (===) checks whether its two operands are equal, returning a Boolean result. Unlike the equality operator, the strict equality 
      operator always considers operands of different types to be different.
      Examples:
      console.log(1 === 1);
         expected output: true
     console.log('hello' === 'hello');
         expected output: true
     console.log('1' ===  1);
         expected output: false

que: 9) How can style/class of an Element be changed ?
Ans: Approach 1: 
     Changing CSS with the help of the style property:=>
     =>   document.getElementById("id").style.property = new_style
     Approach 2: 
      (1) Changing the class itself – We can use two properties that can be used to manipulate the classes.
     =>   document.getElementById("id").classList
      (2) The className Property: This property is used to set the current class of the element to the specified class.
     =>  document.getElementById("id").className = class

que: 10) How to read and write the file using Javascript?
Ans:  The read and write operations in a file can be done by using some commands. But the module which is required
      to perform these operations is to be imported. The required module is ‘fs’ which is called as File System module in 
     JavaScript.
     The read and write operations in a file can be done by using some commands. But the module which is required to
     perform these operations is to be imported. The required module is ‘fs’ which is called as File System module in JavaScript.
     After the File System file is imported then, the writeFile() operation is called. The writeFile() method is used to write into
     the file in JavaScript. The syntax of this method is as follows −
     code:=>
       writeFile(path,inputData,callBackFunction)
     Path    − The first parameter is the path of the file or the name of the file into which the input data is to be written.
                 If there is a file already, then the contents in the file are deleted and the input which is given by the user will get updated or if 
                 the file is not present, then the file with that will be created in the given path and the input information is written into it.
    inputData − The second parameter is the input data which contains the data to be written in the file that is opened.
    callBackFuntion − The third parameter is the function which is the call back function which takes the error as the parameter 
                    and shows the fault if the write operation fails.

que: 11) What are all the loopimg structures in Javascript?

Ans:  Loops offer a quick and easy way to do something repeatedly.You can think of a loop as a computerized version of the game where you tell someone to
        take X steps in one direction, then Y steps in another. For example, the idea "Go five steps to the east" could be expressed this way as a loop:
             1> For loop:

            A for loop repeats until a specified condition evaluates to false.
            When a for loop executes, the following occurs:
     - The initializing expression initialExpression, if any, is executed. This expression usually initializes one or more loop counters, but the syntax allows 
               an expression of any degree of complexity. This expression can also declare variables.
     - The conditionExpression expression is evaluated. If the value of conditionExpression is true, the loop statements execute. Otherwise, the for loop
         terminates. (If the conditionExpression expression is omitted entirely, the condition is assumed to be true.)
     - The statement executes. To execute multiple statements, use a block statement ({ }) to group those statements.
     - If present, the update expression incrementExpression is executed.
     - Control returns to Step 2.

         2> do.....while   looop
          The do...while statement repeats until a specified condition evaluates to false.
             A do...while statement looks as follows:
        do
                 statement
       while (condition);
        statement is always executed once before the condition is checked. (To execute multiple statements, use a block statement ({ }) to group those statements.)
    If condition is true, the statement executes again. At the end of every execution, the condition is checked. When the condition is false, execution stops,
        and control passes to the statement following do...while.
          Example:=>
     In the following example, the do loop iterates at least once and reiterates until i is no longer less than 5.

          let  i = 0;
           do {
                         i += 1;
                   console.log(i);
                    } while (i < 5);
         
            3> while loop:
             A while statement executes its statements as long as a specified condition evaluates to true.
             If the condition becomes false, statement within the loop stops executing and control passes to the statement following the loop.
      The condition test occurs before statement in the loop is executed. If the condition returns true, statement is executed and the condition is tested again.
            If the condition returns false, execution stops, and control is passed to the statement following while.
            Example :=>
          The following while loop iterates as long as n is less than 3:
         let n = 0;
         let x = 0;
         while (n < 3) {
                  n++;
                x += n;
                 }
            4> for in loop:
                 The for...in statement iterates a specified variable over all the enumerable properties of an object. 
               Example:
         The following function takes as its argument an object and the object's name. It then iterates over all the
                  object's properties and returns a string that lists the property names and their values.
                     function dumpProps(obj, objName) {
                        let result = '';
                        for (const i in obj) {
                       result += `${objName}.${i} = ${obj[i]}<br>`;
                        }
                       result += '<hr>';
                       return result;
                        }
       5>  for....of   loop:
           The for...of statement creates a loop Iterating over iterable objects (including Array, Map, Set, arguments object and so on),
                      invoking a custom iteration hook with statements to be executed for the value of each distinct property.
                      structure:=.
                         for (variable of object)
                          statement
           The for...of and for...in statements can also be used with destructuring.

que: 12) How can you convert the string of any base to an integer in Javascript?
 
Ans: In JavaScript parseInt() function (or a method) is used to convert the passed in string parameter or value to an integer value itself.
               This function returns an integer of base which is specified in second argument of parseInt() function.
            In JavaScript parseInt() function (or a method) is used to convert the passed in string parameter or value to an integer value itself. 
            This function returns an integer of base which is specified in second argument of parseInt() function. JavaScript parseInt() function returns Nan
      ( not a number) when the string doesn’t contain number. 
           strucure: 
           parseInt(Value, radix)
               It accepts a string as a value and converts it to specified radix system (any desired numerical value passed by a user) and returns an integer 
                      (corresponding to the passed in numerical radix value). Program to convert string to integer:

que: 13) What is the funtion of delete operator?

Ans: The delete operator removes a property from an object. If the property's value is an object and there are no more references to the object, the object
       held by that property is eventually released automatically.

que: 14) What are all the types of Pop up boxes available in javascript?
Ans: Pop up boxes are the dialogue boxes appeared on the screen when clicked on a button. These boxes are used to show some alert messages or instant messages.
       In JavaScript, there are three types of pop-ups.
          1>Alert box 
         2>  confirm box
         3>  prompt box.

que: 15) What is the use of Void (0)?
Ans:  Using javascript: , you can run code that does not change the current page. This, used with void(0) means, do nothing - don't reload, don't navigate, do not run any code. 
             The "Link" word is treated as a link by the browser. For example, it's focusable, but it doesn't navigate to a new page.
       You might have occasionally came across “javascript:void(0)” in an HTML Document. It is often used when inserting an expression in a web page might produce some
        unwanted effect. To remove this effect, “javascript:void(0)” is used. This expression returns undefined primitive value. This is often used with hyperlinks. Sometimes,
             you will decide to call some JavaScript from inside a link. Normally, when you click a link, the browser loads a brand new page or refreshes the same page 
           (depending on the URL specified). But you most likely don’t desire this to happen if you have hooked up some JavaScript thereto link.
            To prevent the page from refreshing, you could use void(0). Using “#” in anchor tag: When writing the following code in the editor, the web page is refreshed after the
      alert message is shown.

que: 16) How can a page be forced to load to another page in Javascript?
Ans:  Approach: We can use window. location property inside the script tag to forcefully load another page in Javascript. It is a reference to a Location object that is it 
            represents the current location of the document. We can change the URL of a window by accessing it.
            We can use window.location property inside the script tag to forcefully load another page in Javascript. It is a reference to a Location object that is it represents the
       current location of the document. We can change the URL of a window by accessing it.
           Example:=>
                 <script>
                        window.location = <Path / URL>
                 </script>

que: 17) What are the disadvantages of using innerHTML in Javascript?
Ans: - The use of innerHTML very slow: The process of using innerHTML is much slower as its contents as slowly built, also already parsed contents and elements are
          also re-parsed which takes time.
      -  Preserves event handlers attached to any DOM elements: The event handlers do not get attached to the new elements created by setting innerHTML 
        automatically. To do so one has to keep track of the event handlers and attach it to new elements manually. This may cause a memory leak on some browsers.
      - Content is replaced everywhere: Either you add, append, delete or modify contents on a webpage using innerHTML, all contents is replaced, 
                also all the DOM nodes inside that element are reparsed and recreated.
      - Appending to innerHTML is not supported: Usually, += is used for appending in JavaScript. But on appending to an Html tag using innerHTML,
                  the whole tag is re-parsed.
            - Old content replaced issue: The old content is replaced even if object.innerHTML = object.innerHTML + ‘html’ is used instead of 
      - object.innerHTML += ‘html’. There is no way of appending without reparsing the whole innerHTML. Therefore, working with innerHTML becomes very slow.
             - String concatenation just does not scale when dynamic DOM elements need to be created as the plus’ and quote openings and closings becomes difficult to track.
       - Can break the document: There is no proper validation provided by innerHTML, so any valid HTML code can be used. This may break the document of JavaScript.
                  Even broken HTML can be used, which may lead to unexpected problems.
       - Can also be used for Cross-site Scripting(XSS): The fact that innerHTML can add text and elements to the webpage, can easily be used by malicious users to 
                  manipulate and display undesirable or harmful elements within other HTML element tags. Cross-site Scripting may also lead to loss, leak and change of sensitive
          information.








       